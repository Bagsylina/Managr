@model Managr.Models.Task

@{
    ViewBag.Title = "Show";
}


<div class="d-flex justify-content-center">

    <a class="btn btn-outline-dark" href="/Projects/Show/@Model.ProjectId">Show Project</a>
    <br />

</div>

<br/>

@if (Model.Status == "Not Started")
{
    ViewBag.AlertStyle = "alert-danger";
}
@if (Model.Status == "In Progress" || Model.Status == "On Hold")
{
    ViewBag.AlertStyle = "alert-warning";
}
@if (Model.Status == "Completed")
{
    ViewBag.AlertStyle = "alert-success";
}

<div class="container">
    <div class="row">
        <div class="col-md-9">
            <div class="card">
                <div class="card-body">

                    <h3 class="card-title @ViewBag.AlertStyle py-3 px-3 rounded-2">@Model.Title</h3>
                    <br/>
                    <div class="card-text">@Model.Description</div>
                    <br />
                    <div class="text-center">
                        <embed src="@Model.Multimedia" style="max-height: 700px; min-height: 500px; min-width: 500px;"/>
                    </div>
                    <br />
                    <div class="d-flex justify-content-between flex-row mt-5">

                        <span class="@ViewBag.AlertStyle px-1 align-content-center">@Model.Status</span>
                        <span class="alert-info px-1 align-content-center">Start Date: @Model.StartDate</span>
                        <span class="alert-danger px-1 align-content-center">Deadline: @Model.Deadline</span>

                    </div>

                </div>

                <br/>

                @if (ViewBag.IsAssigned || ViewBag.IsOrganizer)
                {
                    <form method="post" action="/Tasks/EditStatus/@Model.Id">
                        <div class="d-flex flex-row p-3 border-1 border-top">
                            <div>
                                @{
                                    List<SelectListItem> StatusList = new List<SelectListItem>();
                                    StatusList.Add(new SelectListItem
                            {
                                Text = "Not Started",
                                Value = "Not Started",
                                Selected = ("Not Started" == Model.Status)
                            });
                                    StatusList.Add(new SelectListItem
                            {
                                Text = "In Progress",
                                Value = "In Progress",
                                Selected = ("In Progress" == Model.Status)
                            });
                                    StatusList.Add(new SelectListItem
                            {
                                Text = "Completed",
                                Value = "Completed",
                                Selected = ("Completed" == Model.Status)
                            });
                                    StatusList.Add(new SelectListItem
                            {
                                Text = "On Hold",
                                Value = "On Hold",
                                Selected = ("On Hold" == Model.Status)
                            });
                                    @Html.DropDownList("newStatus", StatusList, new { @class = "form-control" })
                                    @Html.ValidationMessage("newStatus", null, new { @class = "text-danger" })
                                }
                            </div>
                            <div>
                                <button class="btn btn-secondary" type="submit">Edit Status</button>
                            </div>
                        </div>
                    </form>
                }

                @if (ViewBag.IsAdmin || ViewBag.IsOrganizer)
                {
                    <div class="d-flex flex-row justift-content-between">

                        @if (ViewBag.IsOrganizer)
                        {
                            <a class="btn btn-secondary" href="/Tasks/Edit/@Model.Id"><i class="bi bi-pencil-square"></i> Edit Task</a>
                        }

                        <form method="post" action="/Tasks/Delete/@Model.Id">
                            <button class="btn btn-danger" type="submit"><i class="bi bi-trash"></i> Delete Task</button>
                        </form>

                    </div>
                }

            </div>
        </div>

        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    @foreach (var assuser in ViewBag.AssignedUsers)
                    {
                        <p>@assuser.UserName</p>
                    }
                    @if (!ViewBag.NonZeroAssigned)
                    {
                        <p>There are no members assigned to this task yet.</p>
                    }
                    @if (ViewBag.NonZeroAssigned)
                    {
                        <a href="/Tasks/ShowUsers/@Model.Id" class="btn btn-outline-success">Show All Assigned Users</a>
                    }
                    @if (ViewBag.IsOrganizer)
                    {
                        <a class="btn btn-outline-success" href="/Tasks/AssignUsers/@Model.Id">Assign New User to Task</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<br/>

@foreach (var comm in Model.Comments)
{
    <div class="container">
        <div class="row">
            <div class="col-md-2"></div>

            <div class="col-md-8">

                <div>
                    <p>@comm.Content</p>
                    <small>@comm.CreatedDate</small>
                    <strong><i class="bi bi-person"></i>@comm.User.UserName</strong>
                </div>

                @if (ViewBag.CurrentUser == comm.UserId || ViewBag.IsAdmin)
                {
                    <br/>

                    <div class="d-flex">

                        @if (ViewBag.CurrentUser == comm.UserId)
                        {
                            <div>
                                <a class="btn btn-outline-secondary" href="/Comments/Edit/@comm.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                            </div>
                        }

                        <div>
                            <form method="post" action="/Comments/Delete/@comm.Id">
                                <button class="btn btn-outline-danger" type="submit"><i class="bi bi-trash"></i> Delete</button>
                            </form>
                        </div>
                    </div>
                }

                <hr />

            </div>

            <div class="col-md-2"></div>
        </div>
    </div>
}

<div class="container">
    <div class="row">

        <div class="col-md-2"></div>

        <div class="col-md-8">
            <div class="card">
                <form method="post" action="/Tasks/Show/@Model.Id">
                    <div class="card-body">

                        <input type="hidden" name="TaskId" value="@Model.Id" />

                        <label>Comment</label>
                        <textarea class="form-control" name="Content"></textarea>
                        @Html.ValidationMessage("Content", null, new { @class = "text-danger" })
                        <br/>

                        <button class="btn btn-success " type="submit">Add Comment</button>

                    </div>
                </form>
            </div>
        </div>

        <div class="col-md-2"></div>
    </div>
</div>
